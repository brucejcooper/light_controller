#ifndef __CMD_H__
#define __CMD_H__

#include <stdbool.h>
#include <stdint.h>

typedef enum {
    READ_VALUE,
    READ_NAK,
    READ_COLLISION,
} read_result_t;




typedef enum {
    DALI_CMD_OFF = 0,
    DALI_CMD_UP,
    DALI_CMD_DOWN,
    DALI_CMD_STEP_UP,
    DALI_CMD_STEP_DOWN,
    DALI_CMD_RECALL_MAX_LEVEL,
    DALI_CMD_RECALL_MIN_LEVEL,
    DALI_CMD_STEP_DOWN_AND_OFF,
    DALI_CMD_ON_AND_STEP_UP,
    DALI_CMD_ENABLE_DAPC_SEQUENCE,
    DALI_CMD_GO_TO_LAST_ACTIVE_LEVEL,
    DALI_CMD_CONTINUOUS_UP,
    DALI_CMD_CONTINUOUS_DOWN,
    DALI_CMD_GO_TO_SCENE = 0x10,
    // the following commands are required to be send twice
    DALI_CMD_RESET = 0x20,  
    DALI_CMD_STORE_ACTUAL_LEVEL_IN_DTR0,
    DALI_CMD_SAVE_PERSISTENT_VALUES,
    DALI_CMD_SET_OPERATING_MODE,
    DALI_CMD_RESET_MEMORY_MANK,
    DALI_CMD_IDENTIFY_DEVICE,
    DALI_CMD_SET_MAX_LEVEL = 0x2A,
    DALI_CMD_SET_MIN_LEVEL,
    DALI_CMD_SET_SYSTEM_FAILURE_LEVEL,
    DALI_CMD_SET_POWER_ON_LEVEL,
    DALI_CMD_SET_FADE_TIME,
    DALI_CMD_SET_FADE_RATE,
    DALI_CMD_SET_EXTENDED_FADE_TIME = 0x30,
    DALI_CMD_SET_SCENE = 0x40,
    DALI_CMD_REMOVE_FROM_SCENE = 0x50,
    DALI_CMD_ADD_TO_GROUP = 0x60,
    DALI_CMD_REMOVE_FROM_GROUP = 0x70,
    DALI_CMD_SET_SHORT_ADDRESS = 0x80,
    DALI_CMD_ENABLE_WRITE_MEMORY,
    DALI_CMD_QUERY_STATUS = 0x90,
    DALI_CMD_QUERY_CONTROL_GEAR_PRESENT,
    DALI_CMD_QUERY_LAMP_FAILURE,
    DALI_CMD_QUERY_LAMP_POWER_ON,
    DALI_CMD_QUERY_LIMIT_ERROR,
    DALI_CMD_QUERY_RESET_STATE,
    DALI_CMD_QUERY_MISSING_SHORT_ADDRESS,
    DALI_CMD_QUERY_VERSION_NUMBER,
    DALI_CMD_QUERY_CONTENT_DTR0,
    DALI_CMD_QUERY_DEVICE_TYPE,
    DALI_CMD_QUERY_PHYSICAL_MINIMUM,
    DALI_CMD_QUERY_POWER_FAILURE,
    DALI_CMD_QUERY_CONTENT_DTR1,
    DALI_CMD_QUERY_CONTENT_DTR2,
    DALI_CMD_QUERY_OPERATING_MODE,
    DALI_CMD_QUERY_LIGHT_SOURCE_TYPE,
    DALI_CMD_QUERY_ACTUAL_LEVEL,
    DALI_CMD_QUERY_MAX_LEVEL,
    DALI_CMD_QUERY_MIN_LEVEL,
    DALI_CMD_QUERY_POWER_ON_LEVEL,
    DALI_CMD_QUERY_SYSTEM_FAILURE_LEVEL,
    DALI_CMD_QUERY_FADE_TIME_FADE_RATE,
    DALI_CMD_QUERY_MANUFACTURER_SPECIFIC_MODE,
    DALI_CMD_QUERY_NEXT_DEVICE_TYPE,
    DALI_CMD_QUERY_EXTENDED_FADE_TIME,
    DALI_CMD_QUERY_CONTROL_GEAR_FAILURE = 0xAA,
    DALI_CMD_QUERY_SCENE_LEVEL = 0xB0,
    DALI_CMD_QUERY_GROUPS_ZERO_TO_SEVEN = 0xC0,
    DALI_CMD_QUERY_GROUPS_EIGHT_TO_FIFTEEN,
    DALI_CMD_QUERY_RANDOM_ADDRESS_H,
    DALI_CMD_QUERY_RANDOM_ADDRESS_M,
    DALI_CMD_QUERY_RANDOM_ADDRESS_L,
    DALI_CMD_READ_MEMORY_LOCAITON
} dali_gear_command_t;





read_result_t send_dali_cmd(uint8_t addr, dali_gear_command_t cmd, uint8_t *out);


#endif